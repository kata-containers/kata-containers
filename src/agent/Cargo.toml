[package]
name = "kata-agent"
version = "0.1.0"
authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }

[dependencies]
oci-spec = { workspace = true }
lazy_static = { workspace = true }
ttrpc = { workspace = true }
protobuf = { workspace = true }
libc = { workspace = true }
nix = { workspace = true }
capctl = { workspace = true }
serde_json = { workspace = true }
scan_fmt = { workspace = true }
scopeguard = { workspace = true }
thiserror = { workspace = true }
regex = { workspace = true }
serial_test = { workspace = true }
url = { workspace = true }
derivative = { workspace = true }
const_format = { workspace = true }

# Async helpers
async-trait = { workspace = true }
async-recursion = { workspace = true }
futures = { workspace = true }

# Async runtime
tokio = { workspace = true }
tokio-vsock = { workspace = true }

netlink-sys = { workspace = true }
rtnetlink = { workspace = true }
netlink-packet-route = { workspace = true }
netlink-packet-core = { workspace = true }
ipnetwork = { workspace = true }

slog = { workspace = true }
slog-scope = { workspace = true }
slog-term = { workspace = true }

# Redirect ttrpc log calls
slog-stdlog = { workspace = true }
log = { workspace = true }

cfg-if = { workspace = true }
prometheus = { workspace = true }
procfs = { workspace = true }

anyhow = { workspace = true }

cgroups = { workspace = true }

# Tracing
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-opentelemetry = { workspace = true }
opentelemetry = { workspace = true }

# Configuration
serde = { workspace = true }
toml = { workspace = true }
clap = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }

# Local dependencies
kata-agent-policy = { workspace = true, optional = true }
mem-agent = { workspace = true }
rustjail = { workspace = true }
protocols = { workspace = true, features = ["async", "with-serde"] }
kata-sys-util = { workspace = true }
kata-types = { workspace = true }
runtime-spec = { workspace = true }
safe-path = { workspace = true }
# Note: this crate sets the slog 'max_*' features which allows the log level
# to be modified at runtime.
logging = { workspace = true }
vsock-exporter = { workspace = true }

# Initdata
base64 = "0.22"
sha2 = "0.10.8"
async-compression = { version = "0.4.22", features = ["tokio", "gzip"] }

container-device-interface = "0.1.0"

[target.'cfg(target_arch = "s390x")'.dependencies]
pv_core = { git = "https://github.com/ibm-s390-linux/s390-tools", rev = "4942504a9a2977d49989a5e5b7c1c8e07dc0fa41", package = "s390_pv_core" }

[dev-dependencies]
tempfile = { workspace = true }
which = { workspace = true }
rstest = { workspace = true }
async-std = { workspace = true }

test-utils = { workspace = true }

[profile.release]
lto = true

[features]
seccomp = ["rustjail/seccomp"]
standard-oci-runtime = ["rustjail/standard-oci-runtime"]
agent-policy = ["kata-agent-policy"]

[[bin]]
name = "kata-agent"
path = "src/main.rs"
