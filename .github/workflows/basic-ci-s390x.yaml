name: CI | Basic s390x tests
on:
  workflow_call:
    inputs:
      tarball-suffix:
        required: false
        type: string
      commit-hash:
        required: false
        type: string
      target-branch:
        required: false
        type: string
        default: ""

permissions:
  contents: read

jobs:
  run-containerd-sandboxapi:
    strategy:
      # We can set this to true whenever we're 100% sure that
      # the all the tests are not flaky, otherwise we'll fail
      # all the tests due to a single flaky instance.
      fail-fast: false
      matrix:
        containerd_version: ['active']
        vmm: ['qemu-runtime-rs']
    # TODO: enable me when https://github.com/containerd/containerd/issues/11640 is fixed
    if: false
    runs-on: s390x-large
    env:
      CONTAINERD_VERSION: ${{ matrix.containerd_version }}
      GOPATH: ${{ github.workspace }}
      KATA_HYPERVISOR: ${{ matrix.vmm }}
      SANDBOXER: "shim"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0
          persist-credentials: false

      - name: Rebase atop of the latest target branch
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        run: bash tests/integration/cri-containerd/gha-run.sh install-dependencies

      - name: get-kata-tarball
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-s390x${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        run: bash tests/integration/cri-containerd/gha-run.sh install-kata kata-artifacts

      - name: Run containerd-sandboxapi tests
        timeout-minutes: 10
        run: bash tests/integration/cri-containerd/gha-run.sh run

  run-containerd-stability:
    strategy:
      fail-fast: false
      matrix:
        containerd_version: ['lts', 'active']
        vmm: ['qemu']
    runs-on: s390x-large
    env:
      CONTAINERD_VERSION: ${{ matrix.containerd_version }}
      GOPATH: ${{ github.workspace }}
      KATA_HYPERVISOR: ${{ matrix.vmm }}
      SANDBOXER: "podsandbox"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0
          persist-credentials: false

      - name: Rebase atop of the latest target branch
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        run: bash tests/stability/gha-run.sh install-dependencies

      - name: get-kata-tarball
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-s390x${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        run: bash tests/stability/gha-run.sh install-kata kata-artifacts

      - name: Run containerd-stability tests
        timeout-minutes: 15
        run: bash tests/stability/gha-run.sh run

  run-docker-tests:
    strategy:
      # We can set this to true whenever we're 100% sure that
      # all the tests are not flaky, otherwise we'll fail them
      # all due to a single flaky instance.
      fail-fast: false
      matrix:
        vmm: ['qemu']
    runs-on: s390x-large
    env:
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0
          persist-credentials: false

      - name: Rebase atop of the latest target branch
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        run: bash tests/integration/docker/gha-run.sh install-dependencies

      - name: get-kata-tarball
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-s390x${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        run: bash tests/integration/docker/gha-run.sh install-kata kata-artifacts

      - name: Run docker smoke test
        timeout-minutes: 5
        run: bash tests/integration/docker/gha-run.sh run
