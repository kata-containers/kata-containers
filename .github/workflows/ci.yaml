name: Run the Kata Containers CI
on:
  workflow_call:
    inputs:
      commit-hash:
        required: true
        type: string
      pr-number:
        required: true
        type: string
      tag:
        required: true
        type: string
      target-branch:
        required: false
        type: string
        default: ""

jobs:
  skipper:
    runs-on: ubuntu-latest
    outputs:
      skip_build: ${{ steps.skipper.outputs.skip_build }}
      skip_test: ${{ steps.skipper.outputs.skip_test }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0
      - id: skipper
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}
        run: |
          #!/bin/bash -x
          # NOTE: keep ALL_SKIPS and skipper.outputs in sync
          ALL_SKIPS=( skip_build skip_test )
          DISABLE_SKIPS=()
          CHANGED_FILES=$(git diff --name-only "origin/${TARGET_BRANCH}")
          echo "$CHANGED_FILES"
          echo

          # ci/* doesn't require any tests, just remove them
          CHANGED_FILES=$(echo "$CHANGED_FILES" | grep -v '^ci/')
          # **/*.{rst,md} file require only build
          echo "$CHANGED_FILES" | grep -e '\.rst$' -e '\.md$' -q && DISABLE_SKIPS+=( skip_build ) && CHANGED_FILES=$(echo "$CHANGED_FILES" | grep -v -e '\.rst$' -e '\.md$')
          # Add more rules here; don't forget to remove treated CHANGED_FILES

          if [ -n "$CHANGED_FILES" ]; then
            # Remaining utreated files, run all tests
            for SKIP in "${ALL_SKIPS[@]}"; do
              echo "$SKIP=no" >> "$GITHUB_OUTPUT"
            done
          else
            # Set DISABLE_SKIPS to no (don't want to skip them)
            for SKIP in "${DISABLE_SKIPS[@]}"; do
              echo "$SKIP=no" >> "$GITHUB_OUTPUT"
            done
            # Now SKIP all untreated checks
            for SKIP in "${ALL_SKIPS[@]}"; do
              grep "^$SKIP=" "$GITHUB_OUTPUT" || echo "$SKIP=yes" >> "$GITHUB_OUTPUT"
            done
          fi
          echo "GH OUTPUT"
          cat "$GITHUB_OUTPUT"
        shell: /usr/bin/bash {0}
  build-kata-static-tarball-amd64:
    needs: skipper
    uses: ./.github/workflows/build-kata-static-tarball-amd64.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_build }}

  publish-kata-deploy-payload-amd64:
    needs: [build-kata-static-tarball-amd64, skipper]
    uses: ./.github/workflows/publish-kata-deploy-payload-amd64.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_build }}
    secrets: inherit

  build-kata-static-tarball-s390x:
    needs: skipper
    uses: ./.github/workflows/build-kata-static-tarball-s390x.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_build }}
    secrets: inherit
  
  build-kata-static-tarball-ppc64le:
    needs: skipper
    uses: ./.github/workflows/build-kata-static-tarball-ppc64le.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_build }}

  publish-kata-deploy-payload-s390x:
    needs: [skipper, build-kata-static-tarball-s390x]
    uses: ./.github/workflows/publish-kata-deploy-payload-s390x.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-s390x
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_build }}
    secrets: inherit

  publish-kata-deploy-payload-ppc64le:
    needs: [skipper, build-kata-static-tarball-ppc64le]
    uses: ./.github/workflows/publish-kata-deploy-payload-ppc64le.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-ppc64le
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_build }}
    secrets: inherit

  build-and-publish-tee-confidential-unencrypted-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        if: ${{ needs.skipper.outputs.skip_build != 'yes' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ needs.skipper.outputs.skip_build != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Set up QEMU
        if: ${{ needs.skipper.outputs.skip_build != 'yes' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ needs.skipper.outputs.skip_build != 'yes' }}
        uses: docker/setup-buildx-action@v3

      - name: Login to Kata Containers ghcr.io
        if: ${{ needs.skipper.outputs.skip_build != 'yes' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push
        if: ${{ needs.skipper.outputs.skip_build != 'yes' }}
        uses: docker/build-push-action@v5
        with:
          tags: ghcr.io/kata-containers/test-images:unencrypted-${{ inputs.pr-number }}
          push: true
          context: tests/integration/kubernetes/runtimeclass_workloads/confidential/unencrypted/
          platforms: linux/amd64, linux/s390x
          file: tests/integration/kubernetes/runtimeclass_workloads/confidential/unencrypted/Dockerfile

      - name: skip
        if: ${{ needs.skipper.outputs.skip_build == 'yes' }}
        run: echo "Skip this test"

  run-kata-deploy-tests-on-aks:
    needs: [skipper, publish-kata-deploy-payload-amd64]
    uses: ./.github/workflows/run-kata-deploy-tests-on-aks.yaml
    with:
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}
    secrets: inherit

  run-kata-deploy-tests-on-garm:
    needs: [skipper, publish-kata-deploy-payload-amd64]
    uses: ./.github/workflows/run-kata-deploy-tests-on-garm.yaml
    with:
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}
    secrets: inherit

  run-kata-monitor-tests:
    needs: [skipper, build-kata-static-tarball-amd64]
    uses: ./.github/workflows/run-kata-monitor-tests.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}

  run-k8s-tests-on-aks:
    needs: [skipper, publish-kata-deploy-payload-amd64]
    uses: ./.github/workflows/run-k8s-tests-on-aks.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}
    secrets: inherit

  run-k8s-tests-on-garm:
    needs: [skipper, publish-kata-deploy-payload-amd64]
    uses: ./.github/workflows/run-k8s-tests-on-garm.yaml
    with:
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}
    secrets: inherit

  run-k8s-tests-with-crio-on-garm:
    needs: [skipper, publish-kata-deploy-payload-amd64]
    uses: ./.github/workflows/run-k8s-tests-with-crio-on-garm.yaml
    with:
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}
    secrets: inherit

  run-kata-coco-tests:
    needs: [skipper, publish-kata-deploy-payload-amd64, build-and-publish-tee-confidential-unencrypted-image]
    uses: ./.github/workflows/run-kata-coco-tests.yaml
    with:
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}

  run-k8s-tests-on-zvsi:
    needs: [skipper, publish-kata-deploy-payload-s390x, build-and-publish-tee-confidential-unencrypted-image]
    uses: ./.github/workflows/run-k8s-tests-on-zvsi.yaml
    with:
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-s390x
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}

  run-k8s-tests-on-ppc64le:
    needs: [skipper, publish-kata-deploy-payload-ppc64le]
    uses: ./.github/workflows/run-k8s-tests-on-ppc64le.yaml
    with:
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-ppc64le
      commit-hash: ${{ inputs.commit-hash }}
      pr-number: ${{ inputs.pr-number }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}

  run-metrics-tests:
    needs: [skipper, build-kata-static-tarball-amd64]
    uses: ./.github/workflows/run-metrics.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}

  run-basic-amd64-tests:
    needs: [skipper, build-kata-static-tarball-amd64]
    uses: ./.github/workflows/basic-ci-amd64.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}

  run-cri-containerd-tests-s390x:
    needs: [skipper, build-kata-static-tarball-s390x]
    uses: ./.github/workflows/run-cri-containerd-tests-s390x.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}

  run-cri-containerd-tests-ppc64le:
    needs: [skipper, build-kata-static-tarball-ppc64le]
    uses: ./.github/workflows/run-cri-containerd-tests-ppc64le.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      skip: ${{ needs.skipper.outputs.skip_test }}
