name: CI | Build kata-static tarball for ppc64le
on:
  workflow_call:
    inputs:
      stage:
        required: false
        type: string
        default: test
      tarball-suffix:
        required: false
        type: string
      push-to-registry:
        required: false
        type: string
        default: no
      commit-hash:
        required: false
        type: string
      target-branch:
        required: false
        type: string
        default: ""
      skip:
        required: false
        type: string
        default: no

jobs:
  build-asset:
    runs-on: ppc64le
    strategy:
      matrix:
        asset:
          - agent
          - agent-opa
          - kernel
          - qemu
          - rootfs-initrd
          - shim-v2
          - virtiofsd
        stage:
          - ${{ inputs.stage }}
    steps:
      - name: Adjust a permission for repo
        if: ${{ inputs.skip != 'yes' }}
        run: |
          sudo chown -R $USER:$USER $GITHUB_WORKSPACE

      - name: Prepare the self-hosted runner
        if: ${{ inputs.skip != 'yes' }}
        run: |
            ${HOME}/scripts/prepare_runner.sh
            sudo rm -rf $GITHUB_WORKSPACE/*


      - name: Login to Kata Containers quay.io
        if: ${{ inputs.skip != 'yes' }}
        if: ${{ inputs.push-to-registry == 'yes' }}
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_DEPLOYER_USERNAME }}
          password: ${{ secrets.QUAY_DEPLOYER_PASSWORD }}

      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0 # This is needed in order to keep the commit ids history

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Build ${{ matrix.asset }}
        if: ${{ inputs.skip != 'yes' }}
        run: |
          make "${KATA_ASSET}-tarball"
          build_dir=$(readlink -f build)
          # store-artifact does not work with symlink
          sudo cp -r "${build_dir}" "kata-build"
          sudo chown -R $(id -u):$(id -g) "kata-build"
        env:
          KATA_ASSET: ${{ matrix.asset }}
          TAR_OUTPUT: ${{ matrix.asset }}.tar.gz
          PUSH_TO_REGISTRY: ${{ inputs.push-to-registry }}
          ARTEFACT_REGISTRY: ghcr.io
          ARTEFACT_REGISTRY_USERNAME: ${{ github.actor }}
          ARTEFACT_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: store-artifact ${{ matrix.asset }}
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/upload-artifact@v4
        with:
          name: kata-artifacts-ppc64le-${{ matrix.asset }}${{ inputs.tarball-suffix }}
          path: kata-build/kata-static-${{ matrix.asset }}.tar.xz
          retention-days: 1
          if-no-files-found: error

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  create-kata-tarball:
    runs-on: ppc64le
    needs: build-asset
    steps:
      - name: Adjust a permission for repo
        if: ${{ inputs.skip != 'yes' }}
        run: |
          sudo chown -R $USER:$USER $GITHUB_WORKSPACE

      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0
      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}
      - name: get-artifacts
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          pattern: kata-artifacts-ppc64le-*${{ inputs.tarball-suffix }}
          path: kata-artifacts
      - name: merge-artifacts
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tools/packaging/kata-deploy/local-build/kata-deploy-merge-builds.sh kata-artifacts versions.yaml
      - name: store-artifacts
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/upload-artifact@v4
        with:
          name: kata-static-tarball-ppc64le${{ inputs.tarball-suffix }}
          path: kata-static.tar.xz
          retention-days: 1
          if-no-files-found: error
      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"
