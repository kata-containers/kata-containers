name: CI | Run kata-deploy tests on AKS
on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      repo:
        required: true
        type: string
      tag:
        required: true
        type: string
      pr-number:
        required: true
        type: string
      commit-hash:
        required: false
        type: string
      target-branch:
        required: false
        type: string
        default: ""
      skip:
        required: false
        type: string
        default: no

jobs:
  run-kata-deploy-tests:
    strategy:
      fail-fast: false
      matrix:
        host_os:
          - ubuntu
        vmm:
          - clh
          - dragonball
          - qemu
        include:
          - host_os: cbl-mariner
            vmm: clh
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: ${{ inputs.registry }}
      DOCKER_REPO: ${{ inputs.repo }}
      DOCKER_TAG: ${{ inputs.tag }}
      GH_PR_NUMBER: ${{ inputs.pr-number }}
      KATA_HOST_OS: ${{ matrix.host_os }}
      KATA_HYPERVISOR: ${{ matrix.vmm }}
      KUBERNETES: "vanilla"
      USING_NFD: "false"
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Download Azure CLI
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/kata-deploy/gha-run.sh install-azure-cli

      - name: Log into the Azure account
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/kata-deploy/gha-run.sh login-azure
        env:
          AZ_APPID: ${{ secrets.AZ_APPID }}
          AZ_PASSWORD: ${{ secrets.AZ_PASSWORD }}
          AZ_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
          AZ_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}

      - name: Create AKS cluster
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 10
        run: bash tests/functional/kata-deploy/gha-run.sh create-cluster

      - name: Install `bats`
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/kata-deploy/gha-run.sh install-bats

      - name: Install `kubectl`
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/kata-deploy/gha-run.sh install-kubectl

      - name: Download credentials for the Kubernetes CLI to use them
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/kata-deploy/gha-run.sh get-cluster-credentials

      - name: Run tests
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/kata-deploy/gha-run.sh run-tests

      - name: Delete AKS cluster
        if: always() && ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/kata-deploy/gha-run.sh delete-cluster

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"
