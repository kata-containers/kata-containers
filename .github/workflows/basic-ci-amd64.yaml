name: CI | Basic amd64 tests
on:
  workflow_call:
    inputs:
      tarball-suffix:
        required: false
        type: string
      commit-hash:
        required: false
        type: string
      target-branch:
        required: false
        type: string
        default: ""
      skip:
        required: false
        type: string
        default: no

jobs:
  run-cri-containerd:
    strategy:
      # We can set this to true whenever we're 100% sure that
      # the all the tests are not flaky, otherwise we'll fail
      # all the tests due to a single flaky instance.
      fail-fast: false
      matrix:
        containerd_version: ['lts', 'active']
        vmm: ['clh', 'dragonball', 'qemu', 'stratovirt', 'cloud-hypervisor']
    runs-on: garm-ubuntu-2204-smaller
    env:
      CONTAINERD_VERSION: ${{ matrix.containerd_version }}
      GOPATH: ${{ github.workspace }}
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/cri-containerd/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/cri-containerd/gha-run.sh install-kata kata-artifacts

      - name: Run cri-containerd tests
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 10
        run: bash tests/integration/cri-containerd/gha-run.sh run

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  run-containerd-stability:
    strategy:
      fail-fast: false
      matrix:
        containerd_version: ['lts', 'active']
        vmm: ['clh', 'cloud-hypervisor', 'dragonball', 'qemu', 'stratovirt']
    runs-on: garm-ubuntu-2204-smaller
    env:
      CONTAINERD_VERSION: ${{ matrix.containerd_version }}
      GOPATH: ${{ github.workspace }}
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/stability/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/stability/gha-run.sh install-kata kata-artifacts

      - name: Run containerd-stability tests
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 15
        run: bash tests/stability/gha-run.sh run

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  run-nydus:
    strategy:
      # We can set this to true whenever we're 100% sure that
      # the all the tests are not flaky, otherwise we'll fail
      # all the tests due to a single flaky instance.
      fail-fast: false
      matrix:
        containerd_version: ['lts', 'active']
        vmm: ['clh', 'qemu', 'dragonball', 'stratovirt']
    runs-on: garm-ubuntu-2204-smaller
    env:
      CONTAINERD_VERSION: ${{ matrix.containerd_version }}
      GOPATH: ${{ github.workspace }}
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/nydus/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/nydus/gha-run.sh install-kata kata-artifacts

      - name: Run nydus tests
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 10
        run: bash tests/integration/nydus/gha-run.sh run

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  run-runk:
    runs-on: garm-ubuntu-2204-smaller
    env:
      CONTAINERD_VERSION: lts
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/runk/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/runk/gha-run.sh install-kata kata-artifacts

      - name: Run runk tests
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 10
        run: bash tests/integration/runk/gha-run.sh run

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  run-tracing:
    strategy:
      fail-fast: false
      matrix:
        vmm:
          - clh # cloud-hypervisor
          - qemu
    runs-on: garm-ubuntu-2204-smaller
    env:
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/tracing/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/tracing/gha-run.sh install-kata kata-artifacts

      - name: Run tracing tests
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 15
        run: bash tests/functional/tracing/gha-run.sh run

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  run-vfio:
    strategy:
      fail-fast: false
      matrix:
        vmm: ['clh', 'qemu']
    runs-on: garm-ubuntu-2304
    env:
      GOPATH: ${{ github.workspace }}
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/functional/vfio/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Run vfio tests
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 15
        run: bash tests/functional/vfio/gha-run.sh run

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  run-docker-tests:
    strategy:
      # We can set this to true whenever we're 100% sure that
      # all the tests are not flaky, otherwise we'll fail them
      # all due to a single flaky instance.
      fail-fast: false
      matrix:
        vmm:
          - clh
          - qemu
    runs-on: garm-ubuntu-2304-smaller
    env:
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/docker/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/docker/gha-run.sh install-kata kata-artifacts

      - name: Run docker smoke test
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 5
        run: bash tests/integration/docker/gha-run.sh run

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"

  run-nerdctl-tests:
    strategy:
      # We can set this to true whenever we're 100% sure that
      # all the tests are not flaky, otherwise we'll fail them
      # all due to a single flaky instance.
      fail-fast: false
      matrix:
        vmm:
          - clh
          - dragonball
          - qemu
          - cloud-hypervisor
    runs-on: garm-ubuntu-2304-smaller
    env:
      KATA_HYPERVISOR: ${{ matrix.vmm }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.skip != 'yes' }}
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0

      - name: Rebase atop of the latest target branch
        if: ${{ inputs.skip != 'yes' }}
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Install dependencies
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/nerdctl/gha-run.sh install-dependencies

      - name: get-kata-tarball
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/download-artifact@v4
        with:
          name: kata-static-tarball-amd64${{ inputs.tarball-suffix }}
          path: kata-artifacts

      - name: Install kata
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/nerdctl/gha-run.sh install-kata kata-artifacts

      - name: Run nerdctl smoke test
        if: ${{ inputs.skip != 'yes' }}
        timeout-minutes: 5
        run: bash tests/integration/nerdctl/gha-run.sh run

      - name: Collect artifacts ${{ matrix.vmm }}
        if: ${{ inputs.skip != 'yes' }}
        run: bash tests/integration/nerdctl/gha-run.sh collect-artifacts

      - name: Archive artifacts ${{ matrix.vmm }}
        if: ${{ inputs.skip != 'yes' }}
        uses: actions/upload-artifact@v4
        with:
          name: nerdctl-tests-garm-${{ matrix.vmm }}
          path: /tmp/artifacts
          retention-days: 1

      - name: skip
        if: ${{ inputs.skip == 'yes' }}
        run: echo "Skip this test"
