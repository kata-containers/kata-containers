From 0946e9a802943443333eb7e8c6a0989f37c236a5 Mon Sep 17 00:00:00 2001
From: Peng Tao <tao.peng@linux.alibaba.com>
Date: Mon, 3 Jun 2019 10:47:19 +0800
Subject: [PATCH 25/29] DAX: virtiofsd: make FUSE_REMOVEMAPPING support
 multiple entries

The fuse wire protocol is changed so that we can unmap multiple
mappings in a single call.

Signed-off-by: Peng Tao <tao.peng@linux.alibaba.com>
fix by: Catherine Ho <catherine.hecx@gmail.com>
---
 tools/virtiofsd/fuse_lowlevel.c  |  5 +++--
 tools/virtiofsd/passthrough_ll.c | 26 ++++++++++++++++++--------
 2 files changed, 21 insertions(+), 10 deletions(-)

diff --git a/tools/virtiofsd/fuse_lowlevel.c b/tools/virtiofsd/fuse_lowlevel.c
index a2480d4aa1..99ba000c2e 100644
--- a/tools/virtiofsd/fuse_lowlevel.c
+++ b/tools/virtiofsd/fuse_lowlevel.c
@@ -1920,12 +1920,13 @@ static void do_removemapping(fuse_req_t req, fuse_ino_t nodeid,
     struct fuse_removemapping_one *one;
 
     arg = fuse_mbuf_iter_advance(iter, sizeof(*arg));
-    if (!arg) {
+    if (!arg || arg->count <= 0) {
+        fuse_log(FUSE_LOG_ERR, "do_removemapping: invalid arg %p\n", arg);
         fuse_reply_err(req, EINVAL);
         return;
     }
 
-    one = fuse_mbuf_iter_advance(iter, sizeof(*one));
+    one = fuse_mbuf_iter_advance(iter, arg->count * sizeof(*one));
     if (!one) {
         fuse_log(
             FUSE_LOG_ERR,
diff --git a/tools/virtiofsd/passthrough_ll.c b/tools/virtiofsd/passthrough_ll.c
index ab33fabcda..3af55ffb8a 100644
--- a/tools/virtiofsd/passthrough_ll.c
+++ b/tools/virtiofsd/passthrough_ll.c
@@ -2965,14 +2965,24 @@ static void lo_removemapping(fuse_req_t req, struct fuse_session *se,
     VhostUserFSSlaveMsg msg = { 0 };
     int ret = 0;
 
-    msg.len[0] = argp->len;
-    msg.c_offset[0] = argp->moffset;
-    if (fuse_virtio_unmap(se, &msg)) {
-        fprintf(stderr,
-                "%s: unmap over virtio failed "
-                "(offset=0x%lx, len=0x%lx)\n",
-                __func__, argp->moffset, argp->len);
-        ret = EINVAL;
+    for (int i = 0; num > 0; i++, argp++) {
+        msg.len[i] = argp->len;
+        msg.c_offset[i] = argp->moffset;
+
+        if (--num == 0 || i == VHOST_USER_FS_SLAVE_ENTRIES - 1) {
+            if (fuse_virtio_unmap(se, &msg)) {
+                fuse_log(FUSE_LOG_ERR,
+                         "%s: unmap over virtio failed "
+                         "(offset=0x%lx, len=0x%lx)\n",
+                         __func__, argp->moffset, argp->len);
+                ret = EINVAL;
+                break;
+            }
+            if (num > 0) {
+                i = 0;
+                memset(&msg, 0, sizeof(msg));
+            }
+        }
     }
 
     fuse_reply_err(req, ret);
-- 
2.25.1

