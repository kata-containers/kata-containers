{{- if index .Values "node-feature-discovery" "enabled" -}}
{{- $existingNFDNamespace := include "kata-deploy.detectExistingNFD" . | trim -}}
{{- if $existingNFDNamespace -}}
{{- /* Check if NFD is part of the current release (deployed by us previously) */ -}}
{{- $nfdInCurrentRelease := false -}}
{{- $nfdWorkerDS := lookup "apps/v1" "DaemonSet" .Release.Namespace "node-feature-discovery-worker" -}}
{{- if $nfdWorkerDS -}}
{{- if $nfdWorkerDS.metadata.labels -}}
{{- $releaseLabel := index $nfdWorkerDS.metadata.labels "app.kubernetes.io/instance" | default (index $nfdWorkerDS.metadata.labels "helm.sh/release") | default "" -}}
{{- if eq $releaseLabel .Release.Name -}}
{{- $nfdInCurrentRelease = true -}}
{{- end -}}
{{- end -}}
{{- end -}}
{{- /* Only fail if NFD exists externally (not part of our release) */ -}}
{{- if not $nfdInCurrentRelease -}}
{{- fail (printf "\n\nERROR: Cannot deploy kata-deploy with node-feature-discovery.enabled=true\n\nnode-feature-discovery is already installed in namespace '%s'.\n\nTo fix this, deploy with node-feature-discovery disabled:\n  helm upgrade --install %s ... --set node-feature-discovery.enabled=false\n\nThe existing node-feature-discovery installation will work with kata-deploy.\n" $existingNFDNamespace .Release.Name) -}}
{{- end -}}
{{- end -}}
{{- end -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
{{- if .Values.env.multiInstallSuffix }}
  name: {{ .Chart.Name }}-{{ .Values.env.multiInstallSuffix }}
{{- else }}
  name: {{ .Chart.Name }}
{{- end }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
{{- if .Values.env.multiInstallSuffix }}
      name: {{ .Chart.Name }}-{{ .Values.env.multiInstallSuffix }}
{{- else }}
      name: {{ .Chart.Name }}
{{- end }}
  template:
    metadata:
      labels:
{{- if .Values.env.multiInstallSuffix }}
        name: {{ .Chart.Name }}-{{ .Values.env.multiInstallSuffix }}
{{- else }}
        name: {{ .Chart.Name }}
{{- end }}
    spec:
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 6 }}
{{- end }}
{{- if .Values.env.multiInstallSuffix }}
      serviceAccountName: {{ .Chart.Name }}-sa-{{ .Values.env.multiInstallSuffix }}
{{- else }}
      serviceAccountName: {{ .Chart.Name }}-sa
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- if index .Values "node-feature-discovery" "enabled" }}
      # When node-feature-discovery is managed by this chart (enabled: true), enforce virtualization requirements.
      # Kata Containers requires hardware virtualization support to function.
      #
      # Note: Virtualization checks are ONLY enforced when node-feature-discovery is
      #       managed by kata-deploy
      #
      #       If node-feature-discovery is installed independently (enabled: false),
      #       no checks are applied because we cannot guarantee the external
      #       node-feature-discovery configuration and labels.
      #
      # NOTE: For kata-remote/peer-pods support in the future, add a condition here:
      #       if and (index .Values "node-feature-discovery" "enabled") (not .Values.cloud-api-adaptor.enabled)
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            # x86_64: Intel VT-x (VMX) support
            - matchExpressions:
              - key: feature.node.kubernetes.io/cpu-cpuid.VMX
                operator: In
                values:
                - "true"
              - key: kubernetes.io/arch
                operator: In
                values:
                - "amd64"
            # x86_64: AMD-V (SVM) support
            - matchExpressions:
              - key: feature.node.kubernetes.io/cpu-cpuid.SVM
                operator: In
                values:
                - "true"
              - key: kubernetes.io/arch
                operator: In
                values:
                - "amd64"
            # aarch64: Allow all ARM64 nodes (virtualization check not yet implemented)
            # TODO: Implement proper virtualization detection for aarch64
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - "arm64"
                - "aarch64"
            # s390x: Allow all s390x nodes (virtualization check not yet implemented)
            # TODO: Implement proper virtualization detection for s390x
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - "s390x"
            # ppc64le: Allow all ppc64le nodes (virtualization check not yet implemented)
            # TODO: Implement proper virtualization detection for ppc64le
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - "ppc64le"
            # riscv64: Allow all RISC-V nodes (virtualization support not yet available)
            # TODO: Implement virtualization detection when RISC-V virt support is available
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - "riscv64"
{{- end }}
      hostPID: true
      containers:
      - name: kube-kata
        image: {{ .Values.image.reference }}:{{ default .Chart.AppVersion .Values.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command: ["bash", "-c", "/opt/kata-artifacts/scripts/kata-deploy.sh install"]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DEBUG
          value: {{ .Values.env.debug | quote }}
        - name: SHIMS
          value: {{ .Values.env.shims | quote }}
        - name: SHIMS_X86_64
          value: {{ .Values.env.shims_x86_64 | quote }}
        - name: SHIMS_AARCH64
          value: {{ .Values.env.shims_aarch64 | quote }}
        - name: SHIMS_S390X
          value: {{ .Values.env.shims_s390x | quote }}
        - name: SHIMS_PPC64LE
          value: {{ .Values.env.shims_ppc64le | quote }}
        - name: DEFAULT_SHIM
          value: {{ .Values.env.defaultShim | quote }}
        - name: DEFAULT_SHIM_X86_64
          value: {{ .Values.env.defaultShim_x86_64 | quote }}
        - name: DEFAULT_SHIM_AARCH64
          value: {{ .Values.env.defaultShim_aarch64 | quote }}
        - name: DEFAULT_SHIM_S390X
          value: {{ .Values.env.defaultShim_s390x | quote }}
        - name: DEFAULT_SHIM_PPC64LE
          value: {{ .Values.env.defaultShim_ppc64le | quote }}
        - name: CREATE_RUNTIMECLASSES
          value: {{ .Values.env.createRuntimeClasses | quote }}
        - name: CREATE_DEFAULT_RUNTIMECLASS
          value: {{ .Values.env.createDefaultRuntimeClass | quote }}
        - name: DEFAULT_RUNTIMECLASS_NAME
          value: {{ .Values.env.defaultRuntimeClassName | quote }}
        - name: ALLOWED_HYPERVISOR_ANNOTATIONS
          value: {{ .Values.env.allowedHypervisorAnnotations | quote }}
        - name: SNAPSHOTTER_HANDLER_MAPPING
          value: {{ .Values.env.snapshotterHandlerMapping | quote }}
        - name: SNAPSHOTTER_HANDLER_MAPPING_X86_64
          value: {{ .Values.env.snapshotterHandlerMapping_x86_64 | quote }}
        - name: SNAPSHOTTER_HANDLER_MAPPING_AARCH64
          value: {{ .Values.env.snapshotterHandlerMapping_aarch64 | quote }}
        - name: SNAPSHOTTER_HANDLER_MAPPING_S390X
          value: {{ .Values.env.snapshotterHandlerMapping_s390x | quote }}
        - name: SNAPSHOTTER_HANDLER_MAPPING_PPC64LE
          value: {{ .Values.env.snapshotterHandlerMapping_ppc64le | quote }}
        - name: AGENT_HTTPS_PROXY
          value: {{ .Values.env.agentHttpsProxy | quote }}
        - name: AGENT_NO_PROXY
          value: {{ .Values.env.agentNoProxy | quote }}
        - name: PULL_TYPE_MAPPING
          value: {{ .Values.env.pullTypeMapping | quote }}
        - name: PULL_TYPE_MAPPING_X86_64
          value: {{ .Values.env.pullTypeMapping_x86_64 | quote }}
        - name: PULL_TYPE_MAPPING_AARCH64
          value: {{ .Values.env.pullTypeMapping_aarch64 | quote }}
        - name: PULL_TYPE_MAPPING_S390X
          value: {{ .Values.env.pullTypeMapping_s390x | quote }}
        - name: PULL_TYPE_MAPPING_PPC64LE
          value: {{ .Values.env.pullTypeMapping_ppc64le | quote }}
        - name: INSTALLATION_PREFIX
          value: {{ .Values.env.installationPrefix | quote }}
        - name: MULTI_INSTALL_SUFFIX
          value: {{ .Values.env.multiInstallSuffix | quote }}
        - name: EXPERIMENTAL_SETUP_SNAPSHOTTER
          value: {{ .Values.env._experimentalSetupSnapshotter | quote }}
        - name: EXPERIMENTAL_FORCE_GUEST_PULL
          value: {{ .Values.env._experimentalForceGuestPull | quote }}
        - name: EXPERIMENTAL_FORCE_GUEST_PULL_X86_64
          value: {{ .Values.env._experimentalForceGuestPull | quote }}
        - name: EXPERIMENTAL_FORCE_GUEST_PULL_AARCH64
          value: {{ .Values.env._experimentalForceGuestPull | quote }}
        - name: EXPERIMENTAL_FORCE_GUEST_PULL_S390X
          value: {{ .Values.env._experimentalForceGuestPull | quote }}
        - name: EXPERIMENTAL_FORCE_GUEST_PULL_PPC64LE
          value: {{ .Values.env._experimentalForceGuestPull | quote }}
{{- with .Values.env.hostOS }}
        - name: HOST_OS
          value: {{ . | quote }}
{{- end }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: crio-conf
          mountPath: /etc/crio/
        - name: containerd-conf
          mountPath: /etc/containerd/
        - name: host
          mountPath: /host/
      volumes:
      - name: crio-conf
        hostPath:
          path: /etc/crio/
      - name: containerd-conf
        hostPath:
          path: '{{- template "containerdConfPath" .Values }}'
      - name: host
        hostPath:
          path: /
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
