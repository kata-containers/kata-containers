#
# Copyright (c) 2018 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
#

---
description: |
  This file contains version details that are used by various
  repositories for setting up the correct environment to run
  tests and package components.

format: |
  Each entry in this file MUST conform to the following format:

  <group>:
   description: "<brief-description>"
   notes: "<notes>"

   <project>:
     description: "<brief-description>"
     notes: "<notes>"
     url: "<project-url>"
     issue: "<bug-url>"
     commit: "<commit>"
     version: "<version>"
     uscan-opts: "<optional uscan options>"
     uscan-url: "<url regex for uscan to list versions>"
     release: "<version>"
     branch: "<git-branch>"
     meta:
       <key-1>: "<value-1>"
       <key-n>: "<value-n>"

  Notes:

  - All sections (except "meta") MUST include a description where
    applicable. This is expected to be a brief summary.

  - A section MAY specify a "notes" section which may be multi-line.
    It is expected to be expand on the information specified in
    "description".

  - All sections (except "meta") MUST include a URL where applicable.

  - A section MAY specify a bug URL using the "issue" field.

  - A section MAY define a "meta" section to store additional
    information about a project or group.

  - Each entry MUST specify ATLEAST one of "commit", "version", "release"
    and "branch".

  - WARNING: Gotcha alert! Remember to double-quote all strings
    (except multi-line strings)! This avoids the possibility of a
    version containing a period being treated as a floating point
    number (and truncated!)

  - NOTE: For the uscan related entries, refer to the following uscan pages:
    https://manpages.debian.org/stretch/devscripts/uscan.1.en.html
    https://wiki.debian.org/debian/watch
    Particularly note the 'Common mistakes' section.
    Also note, if you place the uscan strings on single lines in this file then
    '\'s need to be '\'d, so are replaced with '\\', but this does not apply
    for '>-' multi line entries, which can then use the normal uscan syntax.

assets:
  description: "Additional required system elements"

  hypervisor:
    description: "Component used to create virtual machines"

    firecracker:
      description: "Firecracker micro-VMM"
      url: "https://github.com/firecracker-microvm/firecracker"
      uscan-url: >-
        https://github.com/firecracker-microvm/firecracker/tags
        .*/v?(\d\S+)\.tar\.gz
      version: "v0.17.0"

    nemu:
      description: "Reduced-emulation VMM that uses KVM"
      url: "https://github.com/intel/nemu"
      uscan-url: >-
        https://github.com/intel/nemu/tags
        .*/release-?(\d\S+)\.tar\.gz
      version: "release-2019-05-21"

    nemu-ovmf:
      description: "OVMF firmware used by nemu VMM"
      url: "https://github.com/intel/ovmf-virt"
      uscan-url: >-
        https://github.com/intel/ovmf-virt/tags
        .*/?(\d\S+)\.tar\.gz
      version: "0.6"

    qemu-lite:
      description: "lightweight VMM that uses KVM"
      url: "https://github.com/kata-containers/qemu"
      branch: "qemu-lite-2.11.0"
      commit: "87517afd726526e6e32a3e0be07eca34b8cc6962"

    qemu:
      description: "VMM that uses KVM"
      url: "https://github.com/qemu/qemu"
      version: "4.0.0"
      tag: "v4.0.0"
      # Do not include any non-full release versions
      # Break the line *without CR or space being appended*, to appease
      # yamllint, and note the deliberate ' ' at the end of the expression.
      uscan-opts: "opts=uversionmangle=s/(\\d)[_\\.\\-\\+]?\
        ((RC|rc|pre|dev|beta|alpha)\\d*)$/$1~$2/ "
      uscan-url: >-
        https://github.com/qemu/qemu/tags
        .*/v?(\d\S+)\.tar\.gz
      architecture:
        aarch64:
          version: "stable-2.11"
          branch: "master"
          tag: "v3.1.0-rc2"
          commit: "47c1cc30e440860aa695358f7c2dd0b9d7b53d16"
  image:
    description: |
      Root filesystem disk image used to boot the guest virtual
      machine.
    url: "https://github.com/kata-containers/osbuilder"
    architecture:
      aarch64:
        name: "fedora"
        version: "latest"
      ppc64le:
        name: "centos"
        version: "latest"
      s390x:
        name: "ubuntu"
        version: "latest"
      x86_64:
        name: &default-image-name "clearlinux"
        version: "latest"
    meta:
      image-type: *default-image-name

  initrd:
    description: |
      Root filesystem initrd used to boot the guest virtual
      machine.
    url: "https://github.com/kata-containers/osbuilder"
    architecture:
      aarch64:
        name: &default-initrd-name "alpine"
        version: &default-initrd-version "3.7"
      ppc64le:
        name: *default-initrd-name
        version: *default-initrd-version
      s390x:
        name: *default-initrd-name
        version: *default-initrd-version
      x86_64:
        name: *default-initrd-name
        version: *default-initrd-version

  kernel:
    description: "Linux kernel optimised for virtual machines"
    url: "https://cdn.kernel.org/pub/linux/kernel/v4.x/"
    uscan-url: >-
      https://mirrors.edge.kernel.org/pub/linux/kernel/v4.x/linux-(4\.19\..+)\.tar\.gz
    version: "v4.19.65"

components:
  description: "Core system functionality"

  agent:
    description: |
      Container management service running in the guest virtual machines
      root context.
    url: "https://github.com/kata-containers/agent"
    commit: "6f6e9ecd8aded0783c31968b304a9d6589114363"

externals:
  description: "Third-party projects used by the system"

  cni-plugins:
    description: "CNI network plugins"
    url: "https://github.com/containernetworking/plugins"
    commit: "7f98c94613021d8b57acfa1a2f0c8d0f6fd7ae5a"

  crio:
    description: |
      OCI-based Kubernetes Container Runtime Interface implementation
    url: "https://github.com/cri-o/cri-o"
    version: "v1.15.0"
    meta:
      openshift: "6273bea4c9ed788aeb3d051ebf2d030060c05b6c"
      crictl: 1.0.0-beta.2

  cri-containerd:
    description: |
      Containerd Plugin for Kubernetes Container Runtime Interface.
    url: "github.com/containerd/cri"
    tarball_url: "https://storage.googleapis.com/cri-containerd-release"
    version: "1.2.7"

  docker:
    description: "Moby project container manager"
    notes: "Docker Swarm requires an older version of Docker."
    url: "https://github.com/moby/moby"
    version: "v18.06-ce"
    meta:
      swarm-version: "1.12.1"

  gometalinter:
    description: "utility to run various golang linters"
    url: "https://github.com/alecthomas/gometalinter"
    uscan-url: >-
      https://github.com/alecthomas/gometalinter/tags
      .*/v?([\d\.]+)\.tar\.gz
    version: "v2.0.5"

  golangci-lint:
    description: "utility to run various golang linters"
    url: "https://install.goreleaser.com/github.com/golangci/golangci-lint.sh"
    version: "v1.15.0"

  kubernetes:
    description: "Kubernetes project container manager"
    url: "https://github.com/kubernetes/kubernetes"
    # regexp formed to match 'd.tar.gz', deliberately to not match any alpha or
    # beta type releases
    uscan-url: >-
      https://github.com/kubernetes/kubernetes/tags
      .*/v?([\d\.]+)\.tar\.gz
    version: "1.15.1-00"

  openshift:
    description: |
      Distribution of Kubernetes optimized for continuous application
      development and multi-tenant deployment.
    url: "https://github.com/openshift/origin"
    uscan-url: >-
      https://github.com/openshift/origin/tags
      .*/v?([\d\.]+)\.tar\.gz
    version: "v3.10.0"
    commit: "dd10d17"

  runc:
    description: "OCI CLI reference runtime implementation"
    url: "https://github.com/opencontainers/runc"
    # Oddly, here we do want rc versions, as there appears to be little else
    # really for runc.
    uscan-url: >-
      https://github.com/opencontainers/runc/tags
      .*/v?(\d\S+)\.tar\.gz
    version: "v1.0.0-rc5"

languages:
  description: |
    Details of programming languages requried to build system
    components.

  golang:
    description: "Google's 'go' language"
    notes: "'version' is the default minimum version used by this project."
    issue: "https://github.com/golang/go/issues/20676"
    uscan-url: >-
      https://github.com/golang/go/tags .*/go?([\d\.]+)\.tar\.gz
    version: "1.11.10"
    meta:
      description: |
        'newest-version' is the latest version known to work when
        building Kata
      newest-version: "1.12.3"

specs:
  description: "Details of important specifications"

  oci:
    description: "Open Containers Initiative runtime specification"
    url: "https://github.com/opencontainers/runtime-spec/releases"
    uscan-url: >-
      https://github.com/opencontainers/runtime-spec/tags
      .*/v?(\d\S+)\.tar\.gz
    version: "v1.0.0-rc5"
