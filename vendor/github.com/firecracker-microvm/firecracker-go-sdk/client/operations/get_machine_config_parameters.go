// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
// 	http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetMachineConfigParams creates a new GetMachineConfigParams object
// with the default values initialized.
func NewGetMachineConfigParams() *GetMachineConfigParams {

	return &GetMachineConfigParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetMachineConfigParamsWithTimeout creates a new GetMachineConfigParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetMachineConfigParamsWithTimeout(timeout time.Duration) *GetMachineConfigParams {

	return &GetMachineConfigParams{

		timeout: timeout,
	}
}

// NewGetMachineConfigParamsWithContext creates a new GetMachineConfigParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetMachineConfigParamsWithContext(ctx context.Context) *GetMachineConfigParams {

	return &GetMachineConfigParams{

		Context: ctx,
	}
}

// NewGetMachineConfigParamsWithHTTPClient creates a new GetMachineConfigParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetMachineConfigParamsWithHTTPClient(client *http.Client) *GetMachineConfigParams {

	return &GetMachineConfigParams{
		HTTPClient: client,
	}
}

/*GetMachineConfigParams contains all the parameters to send to the API endpoint
for the get machine config operation typically these are written to a http.Request
*/
type GetMachineConfigParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get machine config params
func (o *GetMachineConfigParams) WithTimeout(timeout time.Duration) *GetMachineConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get machine config params
func (o *GetMachineConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get machine config params
func (o *GetMachineConfigParams) WithContext(ctx context.Context) *GetMachineConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get machine config params
func (o *GetMachineConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get machine config params
func (o *GetMachineConfigParams) WithHTTPClient(client *http.Client) *GetMachineConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get machine config params
func (o *GetMachineConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *GetMachineConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
